Link:- https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/description/

Code:- 

class Solution {

    public int findFirst(int[] nums, int target) {
        int start = 0, end = nums.length - 1;
        int index = -1;
        
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (nums[mid] == target) {
                index = mid; // Potential first occurrence
                end = mid - 1; // Search towards the left
            } else if (nums[mid] > target) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        
        return index;
    }

    public int findLast(int[] nums, int target) {
        int start = 0, end = nums.length - 1;
        int index = -1;
        
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (nums[mid] == target) {
                index = mid; // Potential last occurrence
                start = mid + 1; // Search towards the right
            } else if (nums[mid] > target) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        
        return index;
    }

    public int[] searchRange(int[] nums, int target) {
        int[] answer = new int[2];
        answer[0] = findFirst(nums, target);
        answer[1] = findLast(nums, target);
        return answer;
    }
}
