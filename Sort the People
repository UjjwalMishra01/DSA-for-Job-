https://leetcode.com/problems/sort-the-people/




class Solution {

    static void swap(String[] n, int[] h, int i, int j) {
        int temp = h[i];
        h[i] = h[j];
        h[j] = temp;

        String num = n[i];
        n[i] = n[j];
        n[j] = num; 
    }

    static int partition(int[] arr, String[] names, int low, int high) {
        int pivot = arr[high];
        int i = (low - 1);
        for (int j = low; j <= high - 1; j++) {
            if (arr[j] > pivot) { 
                i++;
                swap(names, arr, i, j);
            }
        }
        swap(names, arr, i + 1, high);
        return i + 1;
    }

    static void quicksort(String[] names, int[] heights, int low, int high) {
        if (low < high) {
            int pi = partition(heights, names, low, high);
            quicksort(names, heights, low, pi - 1);
            quicksort(names, heights, pi + 1, high);
        }
    }

    public String[] sortPeople(String[] names, int[] heights) {
        int N = heights.length;
        quicksort(names, heights, 0, N - 1);
        return names;
    }
}
